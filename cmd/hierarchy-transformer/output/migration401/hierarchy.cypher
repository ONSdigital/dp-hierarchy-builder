CREATE CONSTRAINT ON (n:`_generic_hierarchy_node_migration-country`) ASSERT n.code IS UNIQUE;
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'all-countries-of-last-or-next-residence',label:'All countries of last or next residence' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'european-union',label:'European Union' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'european-union-eu15',label:'European Union EU15' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'european-union-eu8',label:'European Union EU8' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'european-union-eu2',label:'European Union EU2' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'other-european-union',label:'Other European Union' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'non-european-union',label:'Non European Union' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'europe-exc-european-union',label:'Europe exc European Union' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'asia',label:'Asia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'middle-east-and-central-asia',label:'Middle East and Central Asia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'east-asia',label:'East Asia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'south-asia',label:'South Asia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'south-east-asia',label:'South East Asia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'rest-of-world',label:'Rest of World' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'sub-saharan-africa',label:'Sub-Saharan Africa' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'north-africa',label:'North Africa' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'north-america',label:'North America' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'central-and-south-america',label:'Central and South America' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'oceania',label:'Oceania' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'other-groupings',label:'Other Groupings' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'european-economic-area-eea',label:'European Economic Area (EEA)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'european-free-trade-association-efta',label:'European Free Trade Association (EFTA)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'commonwealth',label:'Commonwealth' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'non-european-union-and-non-commonwealth',label:'Non European Union and Non Commonwealth' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'europe-inc-european-union',label:'Europe inc European Union' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'old-commonwealth',label:'Old Commonwealth' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'new-commonwealth',label:'New Commonwealth' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'austria',label:'Austria' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'belgium',label:'Belgium' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'denmark',label:'Denmark' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'finland',label:'Finland' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'aland-islands',label:'Aland Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'france',label:'France' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'germany',label:'Germany' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'gibraltar',label:'Gibraltar' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'greece',label:'Greece' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'republic-of-ireland',label:'Republic of Ireland' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'italy',label:'Italy' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'luxembourg',label:'Luxembourg' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'netherlands',label:'Netherlands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'portugal',label:'Portugal' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'azores-and-madeira',label:'Azores and Madeira' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'spain-and-balearic-islands',label:'Spain and Balearic Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'canary-islands',label:'Canary Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'spain',label:'Spain (not otherwise specified)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'sweden',label:'Sweden' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'czech-republic',label:'Czech Republic' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'estonia',label:'Estonia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'hungary',label:'Hungary' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'latvia',label:'Latvia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'lithuania',label:'Lithuania' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'poland',label:'Poland' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'slovakia',label:'Slovakia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'slovenia',label:'Slovenia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'bulgaria',label:'Bulgaria' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'romania',label:'Romania' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'cyprus-ex',label:'Cyprus (Ex)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'cyprus-southern',label:'Cyprus, Southern' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'malta',label:'Malta' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'croatia',label:'Croatia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'albania',label:'Albania' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'andorra',label:'Andorra' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'armenia',label:'Armenia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'azerbaijan',label:'Azerbaijan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'belarus',label:'Belarus' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'bosnia-herzegovina',label:'Bosnia Herzegovina' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'cyprus-northern',label:'Cyprus, Northern ' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'czechoslovakia-ex',label:'Czechoslovakia (Ex)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'faeroe-islands',label:'Faeroe Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'georgia',label:'Georgia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'greenland',label:'Greenland' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'iceland',label:'Iceland' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'kosova',label:'Kosova' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'liechtenstein',label:'Liechtenstein' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'macedonia',label:'Macedonia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'moldova',label:'Moldova' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'monaco',label:'Monaco' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'montenegro',label:'Montenegro' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'norway',label:'Norway' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'bouvet-island',label:'Bouvet Island' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'svalbard-and-jan-mayen',label:'Svalbard and Jan Mayen' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'russia',label:'Russia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'san-marino',label:'San Marino' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'serbia',label:'Serbia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'switzerland',label:'Switzerland' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'turkey',label:'Turkey' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'ukraine',label:'Ukraine' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'ussr-ex',label:'USSR (Ex)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'vatican-city',label:'Vatican City' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'yugoslavia-ex',label:'Yugoslavia (Ex)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'yugoslavia-not-otherwise-specified',label:'Yugoslavia (not otherwise specified)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'afghanistan',label:'Afghanistan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'bahrain',label:'Bahrain' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'iran',label:'Iran' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'iraq',label:'Iraq' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'israel',label:'Israel' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'jordan',label:'Jordan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'kazakhstan',label:'Kazakhstan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'kuwait',label:'Kuwait' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'kyrgyzstan',label:'Kyrgyzstan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'lebanon',label:'Lebanon' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'oman',label:'Oman' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'palestine',label:'Palestine' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'qatar',label:'Qatar' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'saudi-arabia',label:'Saudi Arabia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'syria',label:'Syria' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'tajikistan',label:'Tajikistan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'turkmenistan',label:'Turkmenistan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'united-arab-emirates',label:'United Arab Emirates' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'uzbekistan',label:'Uzbekistan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'yemen',label:'Yemen' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'china',label:'China' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'hong-kong',label:'Hong Kong' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'macao',label:'Macao' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'mongolia',label:'Mongolia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'japan',label:'Japan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'korea-north-dpr',label:'Korea, North / DPR' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'korea-south-republic',label:'Korea, South / Republic' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'taiwan',label:'Taiwan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'bangladesh',label:'Bangladesh' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'bhutan',label:'Bhutan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'british-indian-ocean-territory',label:'British Indian Ocean Territory' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'india',label:'India' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'maldives',label:'Maldives' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'nepal',label:'Nepal' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'pakistan',label:'Pakistan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'sri-lanka',label:'Sri Lanka' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'brunei',label:'Brunei' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'cambodia-kampuchea',label:'Cambodia / Kampuchea' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'east-timor',label:'East Timor' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'indonesia',label:'Indonesia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'laos',label:'Laos' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'malaysia',label:'Malaysia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'myanmar-burma',label:'Myanmar / Burma' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'philippines',label:'Philippines' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'singapore',label:'Singapore' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'thailand',label:'Thailand' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'vietnam',label:'Vietnam' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'angola',label:'Angola' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'benin',label:'Benin' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'botswana',label:'Botswana' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'burkina-faso',label:'Burkina Faso' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'burundi',label:'Burundi' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'cameroon',label:'Cameroon' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'cape-verde',label:'Cape Verde' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'central-african-republic',label:'Central African republic' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'chad',label:'Chad' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'comoros',label:'Comoros' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'congo',label:'Congo' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'congo-democratic-republic',label:'Congo (Democratic Republic)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'djibouti',label:'Djibouti' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'equatorial-guinea',label:'Equatorial Guinea' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'eritrea',label:'Eritrea' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'ethiopia',label:'Ethiopia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'gabon',label:'Gabon' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'gambia-the',label:'Gambia, The' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'ghana',label:'Ghana' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'guinea',label:'Guinea' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'guinea---bissau',label:'Guinea - Bissau' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'ivory-coast',label:'Ivory Coast' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'kenya',label:'Kenya' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'lesotho',label:'Lesotho' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'liberia',label:'Liberia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'madagascar',label:'Madagascar' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'malawi',label:'Malawi' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'mali',label:'Mali' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'mauritius',label:'Mauritius' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'mayotte',label:'Mayotte' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'mozambique',label:'Mozambique' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'namibia',label:'Namibia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'niger',label:'Niger' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'nigeria',label:'Nigeria' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'reunion',label:'Reunion' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'rwanda',label:'Rwanda' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'sao-tome-and-principe',label:'Sao Tome and Principe' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'senegal',label:'Senegal' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'seychelles',label:'Seychelles' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'sierra-leone',label:'Sierra Leone' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'somalia',label:'Somalia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'south-africa',label:'South Africa' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'st-helena-ascension-tristan-da-cunha',label:'St Helena / Ascension / Tristan da Cunha' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'sudan-south',label:'Sudan, South' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'swaziland',label:'Swaziland' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'tanzania',label:'Tanzania' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'togo',label:'Togo' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'uganda',label:'Uganda' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'zambia',label:'Zambia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'zimbabwe',label:'Zimbabwe' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'algeria',label:'Algeria' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'egypt',label:'Egypt' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'mauritania',label:'Mauritania' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'morocco',label:'Morocco' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'sudan-ex',label:'Sudan (Ex)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'sudan',label:'Sudan' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'libya',label:'Libya' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'tunisia',label:'Tunisia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'western-sahara',label:'Western Sahara' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'canada',label:'Canada' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'united-states-of-america-usa',label:'United States of America (USA)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'puerto-rico',label:'Puerto Rico' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'united-states-virgin-islands-the',label:'United States Virgin Islands, The' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'anguilla',label:'Anguilla' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'antigua-and-barbuda',label:'Antigua and Barbuda' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'antilles-curacao',label:'Antilles / Curacao' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'argentina',label:'Argentina' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'aruba',label:'Aruba' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'bahamas-the',label:'Bahamas, The' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'barbados',label:'Barbados' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'belize',label:'Belize' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'bermuda',label:'Bermuda' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'bolivia',label:'Bolivia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'brazil',label:'Brazil' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'british-virgin-islands',label:'British Virgin Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'cayman-islands',label:'Cayman Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'chile',label:'Chile' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'colombia',label:'Colombia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'costa-rica',label:'Costa Rica' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'cuba',label:'Cuba' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'dominica',label:'Dominica' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'dominican-republic',label:'Dominican Republic' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'ecuador',label:'Ecuador' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'el-salvador',label:'El Salvador' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'falkland-islands-british-antarctic',label:'Falkland Islands / British Antarctic' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'french-guiana',label:'French Guiana' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'grenada',label:'Grenada' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'guadeloupe',label:'Guadeloupe' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'guatemala',label:'Guatemala' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'guyana',label:'Guyana' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'haiti',label:'Haiti' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'honduras',label:'Honduras' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'jamaica',label:'Jamaica' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'martinique',label:'Martinique' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'mexico',label:'Mexico' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'montserrat',label:'Montserrat' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'nicaragua',label:'Nicaragua' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'panama',label:'Panama' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'paraguay',label:'Paraguay' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'peru',label:'Peru' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'south-georgia-and-south-sandwich-islands',label:'South Georgia and South Sandwich Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'st-barthelemy',label:'St Barthelemy' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'st-kitts-and-nevis',label:'St Kitts and Nevis' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'st-lucia',label:'St Lucia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'st-martin',label:'St Martin' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'st-pierre-and-miquelon',label:'St Pierre and Miquelon' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'st-vincent-and-the-grenadines',label:'St Vincent and the Grenadines' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'suriname',label:'Suriname' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'trinidad-and-tobago',label:'Trinidad and Tobago' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'turks-and-caicos-islands',label:'Turks and Caicos Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'uruguay',label:'Uruguay' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'venezuela',label:'Venezuela' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'american-samoa',label:'American Samoa ' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'antarctica-not-otherwise-specified',label:'Antarctica (not otherwise specified)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'australia',label:'Australia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'cocos-island',label:'Cocos Island' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'norfolk-island',label:'Norfolk Island' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'christmas-island',label:'Christmas Island ' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'heard-island-and-mcdonald-islands',label:'Heard Island and McDonald Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'cook-island',label:'Cook Island' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'fiji',label:'Fiji' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'french-polynesia',label:'French Polynesia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'french-southern-antarctic-territories',label:'French Southern / Antarctic Territories' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'guam',label:'Guam' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'kiribati-and-other-pacific-islands',label:'Kiribati (and other Pacific Islands)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'marshall-islands',label:'Marshall Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'micronesia',label:'Micronesia ' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'nauru',label:'Nauru' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'new-caledonia',label:'New Caledonia' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'new-zealand',label:'New Zealand' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'tokelau',label:'Tokelau' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'niue-island',label:'Niue Island' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'northern-mariana-islands',label:'Northern Mariana Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'pacific-islands-inc-palau',label:'Pacific Islands (inc Palau)' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'papua-new-guinea',label:'Papua New Guinea' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'pitcairn-island',label:'Pitcairn Island' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'samoa-western',label:'Samoa, Western' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'solomon-islands',label:'Solomon Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'tonga',label:'Tonga' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'tuvalu',label:'Tuvalu' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'vanuatu',label:'Vanuatu' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'wallis-and-futuna-islands',label:'Wallis and Futuna Islands' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'switerzerland',label:'Switerzerland' });
CREATE (node:`_generic_hierarchy_node_migration-country` { code:'british-overseas',label:'British Overseas' });
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "all-countries-of-last-or-next-residence" and child.code = "european-union" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union" and child.code = "european-union-eu15" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union" and child.code = "european-union-eu8" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union" and child.code = "european-union-eu2" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union" and child.code = "other-european-union" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "all-countries-of-last-or-next-residence" and child.code = "non-european-union" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union" and child.code = "europe-exc-european-union" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union" and child.code = "asia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "asia" and child.code = "middle-east-and-central-asia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "asia" and child.code = "east-asia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "asia" and child.code = "south-asia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "asia" and child.code = "south-east-asia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union" and child.code = "rest-of-world" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "rest-of-world" and child.code = "sub-saharan-africa" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "rest-of-world" and child.code = "north-africa" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "rest-of-world" and child.code = "north-america" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "rest-of-world" and child.code = "central-and-south-america" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "rest-of-world" and child.code = "oceania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "all-countries-of-last-or-next-residence" and child.code = "other-groupings" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "other-groupings" and child.code = "european-economic-area-eea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "other-groupings" and child.code = "european-free-trade-association-efta" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "other-groupings" and child.code = "commonwealth" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "other-groupings" and child.code = "non-european-union-and-non-commonwealth" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "other-groupings" and child.code = "europe-inc-european-union" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "commonwealth" and child.code = "old-commonwealth" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "commonwealth" and child.code = "new-commonwealth" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "austria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "belgium" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "denmark" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "finland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "aland-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "france" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "germany" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "gibraltar" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "greece" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "republic-of-ireland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "italy" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "luxembourg" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "netherlands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "portugal" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "azores-and-madeira" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "spain-and-balearic-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "canary-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "spain" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu15" and child.code = "sweden" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu8" and child.code = "czech-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu8" and child.code = "estonia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu8" and child.code = "hungary" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu8" and child.code = "latvia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu8" and child.code = "lithuania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu8" and child.code = "poland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu8" and child.code = "slovakia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu8" and child.code = "slovenia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu2" and child.code = "bulgaria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-union-eu2" and child.code = "romania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "other-european-union" and child.code = "cyprus-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "other-european-union" and child.code = "cyprus-southern" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "other-european-union" and child.code = "malta" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "other-european-union" and child.code = "croatia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "albania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "andorra" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "armenia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "azerbaijan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "belarus" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "bosnia-herzegovina" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "cyprus-northern" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "czechoslovakia-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "faeroe-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "georgia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "greenland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "iceland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "kosova" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "liechtenstein" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "macedonia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "moldova" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "monaco" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "montenegro" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "norway" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "bouvet-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "svalbard-and-jan-mayen" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "russia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "san-marino" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "serbia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "switzerland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "turkey" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "ukraine" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "ussr-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "vatican-city" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "yugoslavia-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-exc-european-union" and child.code = "yugoslavia-not-otherwise-specified" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "afghanistan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "bahrain" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "iran" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "iraq" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "israel" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "jordan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "kazakhstan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "kuwait" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "kyrgyzstan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "lebanon" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "oman" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "palestine" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "qatar" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "saudi-arabia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "syria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "tajikistan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "turkmenistan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "united-arab-emirates" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "uzbekistan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "middle-east-and-central-asia" and child.code = "yemen" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "east-asia" and child.code = "china" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "east-asia" and child.code = "hong-kong" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "east-asia" and child.code = "macao" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "east-asia" and child.code = "mongolia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "east-asia" and child.code = "japan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "east-asia" and child.code = "korea-north-dpr" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "east-asia" and child.code = "korea-south-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "east-asia" and child.code = "taiwan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-asia" and child.code = "bangladesh" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-asia" and child.code = "bhutan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-asia" and child.code = "british-indian-ocean-territory" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-asia" and child.code = "india" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-asia" and child.code = "maldives" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-asia" and child.code = "nepal" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-asia" and child.code = "pakistan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-asia" and child.code = "sri-lanka" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-east-asia" and child.code = "brunei" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-east-asia" and child.code = "cambodia-kampuchea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-east-asia" and child.code = "east-timor" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-east-asia" and child.code = "indonesia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-east-asia" and child.code = "laos" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-east-asia" and child.code = "malaysia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-east-asia" and child.code = "myanmar-burma" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-east-asia" and child.code = "philippines" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-east-asia" and child.code = "singapore" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-east-asia" and child.code = "thailand" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "south-east-asia" and child.code = "vietnam" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "angola" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "benin" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "botswana" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "burkina-faso" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "burundi" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "cameroon" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "cape-verde" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "central-african-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "chad" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "comoros" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "congo" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "congo-democratic-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "djibouti" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "equatorial-guinea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "eritrea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "ethiopia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "gabon" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "gambia-the" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "ghana" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "guinea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "guinea---bissau" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "ivory-coast" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "kenya" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "lesotho" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "liberia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "madagascar" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "malawi" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "mali" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "mauritius" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "mayotte" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "mozambique" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "namibia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "niger" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "nigeria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "reunion" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "rwanda" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "sao-tome-and-principe" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "senegal" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "seychelles" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "sierra-leone" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "somalia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "south-africa" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "st-helena-ascension-tristan-da-cunha" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "sudan-south" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "swaziland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "tanzania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "togo" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "uganda" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "zambia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "sub-saharan-africa" and child.code = "zimbabwe" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-africa" and child.code = "algeria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-africa" and child.code = "egypt" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-africa" and child.code = "mauritania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-africa" and child.code = "morocco" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-africa" and child.code = "sudan-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-africa" and child.code = "sudan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-africa" and child.code = "libya" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-africa" and child.code = "tunisia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-africa" and child.code = "western-sahara" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-america" and child.code = "canada" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-america" and child.code = "united-states-of-america-usa" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-america" and child.code = "puerto-rico" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "north-america" and child.code = "united-states-virgin-islands-the" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "anguilla" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "antigua-and-barbuda" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "antilles-curacao" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "argentina" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "aruba" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "bahamas-the" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "barbados" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "belize" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "bermuda" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "bolivia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "brazil" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "british-virgin-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "cayman-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "chile" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "colombia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "costa-rica" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "cuba" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "dominica" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "dominican-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "ecuador" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "el-salvador" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "falkland-islands-british-antarctic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "french-guiana" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "grenada" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "guadeloupe" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "guatemala" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "guyana" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "haiti" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "honduras" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "jamaica" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "martinique" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "mexico" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "montserrat" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "nicaragua" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "panama" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "paraguay" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "peru" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "south-georgia-and-south-sandwich-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "st-barthelemy" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "st-kitts-and-nevis" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "st-lucia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "st-martin" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "st-pierre-and-miquelon" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "st-vincent-and-the-grenadines" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "suriname" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "trinidad-and-tobago" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "turks-and-caicos-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "uruguay" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "central-and-south-america" and child.code = "venezuela" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "american-samoa" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "antarctica-not-otherwise-specified" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "australia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "cocos-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "norfolk-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "christmas-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "heard-island-and-mcdonald-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "cook-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "fiji" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "french-polynesia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "french-southern-antarctic-territories" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "guam" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "kiribati-and-other-pacific-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "marshall-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "micronesia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "nauru" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "new-caledonia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "new-zealand" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "tokelau" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "niue-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "northern-mariana-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "pacific-islands-inc-palau" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "papua-new-guinea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "pitcairn-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "samoa-western" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "solomon-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "tonga" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "tuvalu" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "vanuatu" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "oceania" and child.code = "wallis-and-futuna-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "old-commonwealth" and child.code = "australia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "old-commonwealth" and child.code = "heard-island-and-mcdonald-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "old-commonwealth" and child.code = "canada" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "old-commonwealth" and child.code = "new-zealand" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "old-commonwealth" and child.code = "south-africa" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "albania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "andorra" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "armenia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "azerbaijan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "belarus" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "bosnia-herzegovina" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "cyprus-northern" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "czechoslovakia-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "faeroe-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "georgia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "greenland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "iceland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "kosova" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "liechtenstein" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "macedonia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "moldova" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "monaco" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "montenegro" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "norway" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "bouvet-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "svalbard-and-jan-mayen" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "russia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "san-marino" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "serbia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "switzerland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "turkey" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "ukraine" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "ussr-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "vatican-city" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "yugoslavia-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "yugoslavia-not-otherwise-specified" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "afghanistan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "bahrain" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "iran" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "iraq" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "israel" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "jordan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "kazakhstan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "kuwait" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "kyrgyzstan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "lebanon" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "oman" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "palestine" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "qatar" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "saudi-arabia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "syria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "tajikistan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "turkmenistan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "united-arab-emirates" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "uzbekistan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "yemen" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "china" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "hong-kong" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "macao" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "mongolia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "japan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "korea-north-dpr" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "korea-south-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "taiwan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "bangladesh" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "bhutan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "british-indian-ocean-territory" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "india" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "maldives" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "nepal" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "pakistan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "sri-lanka" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "brunei" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "cambodia-kampuchea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "east-timor" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "indonesia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "laos" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "malaysia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "myanmar-burma" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "philippines" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "singapore" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "thailand" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "vietnam" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "angola" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "benin" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "botswana" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "burkina-faso" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "burundi" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "cameroon" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "cape-verde" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "central-african-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "chad" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "comoros" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "congo" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "congo-democratic-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "djibouti" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "equatorial-guinea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "eritrea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "ethiopia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "gabon" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "gambia-the" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "ghana" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "guinea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "guinea---bissau" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "ivory-coast" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "kenya" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "lesotho" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "liberia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "madagascar" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "malawi" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "mali" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "mauritius" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "mayotte" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "mozambique" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "namibia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "niger" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "nigeria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "reunion" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "rwanda" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "sao-tome-and-principe" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "senegal" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "seychelles" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "sierra-leone" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "somalia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "st-helena-ascension-tristan-da-cunha" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "sudan-south" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "swaziland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "tanzania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "togo" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "uganda" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "zambia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "zimbabwe" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "algeria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "egypt" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "mauritania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "morocco" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "sudan-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "sudan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "libya" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "tunisia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "western-sahara" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "united-states-of-america-usa" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "puerto-rico" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "united-states-virgin-islands-the" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "anguilla" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "antigua-and-barbuda" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "antilles-curacao" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "argentina" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "aruba" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "bahamas-the" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "barbados" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "belize" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "bermuda" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "bolivia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "brazil" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "british-virgin-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "cayman-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "chile" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "colombia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "costa-rica" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "cuba" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "dominica" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "dominican-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "ecuador" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "el-salvador" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "falkland-islands-british-antarctic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "french-guiana" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "grenada" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "guadeloupe" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "guatemala" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "guyana" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "haiti" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "honduras" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "jamaica" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "martinique" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "mexico" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "montserrat" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "nicaragua" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "panama" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "paraguay" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "peru" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "south-georgia-and-south-sandwich-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "st-barthelemy" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "st-kitts-and-nevis" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "st-lucia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "st-martin" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "st-pierre-and-miquelon" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "st-vincent-and-the-grenadines" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "suriname" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "trinidad-and-tobago" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "turks-and-caicos-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "uruguay" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "venezuela" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "american-samoa" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "antarctica-not-otherwise-specified" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "cocos-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "norfolk-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "christmas-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "cook-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "fiji" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "french-polynesia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "french-southern-antarctic-territories" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "guam" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "kiribati-and-other-pacific-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "marshall-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "micronesia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "nauru" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "new-caledonia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "tokelau" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "niue-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "northern-mariana-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "pacific-islands-inc-palau" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "papua-new-guinea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "pitcairn-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "samoa-western" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "solomon-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "tonga" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "tuvalu" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "vanuatu" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "non-european-union-and-non-commonwealth" and child.code = "wallis-and-futuna-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "iceland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "liechtenstein" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "norway" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "austria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "belgium" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "denmark" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "finland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "aland-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "france" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "germany" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "gibraltar" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "greece" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "republic-of-ireland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "italy" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "luxembourg" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "netherlands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "portugal" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "azores-and-madeira" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "spain-and-balearic-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "canary-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "spain" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "sweden" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "czech-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "estonia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "hungary" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "latvia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "lithuania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "poland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "slovakia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "slovenia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "bulgaria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-economic-area-eea" and child.code = "romania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "iceland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "liechtenstein" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "norway" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "austria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "belgium" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "denmark" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "finland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "aland-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "france" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "germany" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "gibraltar" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "greece" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "republic-of-ireland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "italy" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "luxembourg" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "netherlands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "portugal" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "azores-and-madeira" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "spain-and-balearic-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "canary-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "spain" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "sweden" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "czech-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "estonia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "hungary" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "latvia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "lithuania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "poland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "slovakia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "slovenia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "bulgaria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "romania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "european-free-trade-association-efta" and child.code = "switerzerland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "anguilla" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "nigeria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "antigua-and-barbuda" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "niue-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "bahamas-the" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "norfolk-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "bangladesh" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "pacific-islands-inc-palau" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "barbados" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "pakistan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "belize" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "papua-new-guinea" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "bermuda" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "pitcairn-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "botswana" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "samoa-western" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "british-indian-ocean-territory" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "seychelles" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "british-overseas" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "sierra-leone" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "british-virgin-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "singapore" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "brunei" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "solomon-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "cameroon" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "south-georgia-and-south-sandwich-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "cayman-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "sri-lanka" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "christmas-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "st-helena-ascension-tristan-da-cunha" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "cocos-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "st-kitts-and-nevis" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "cook-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "st-lucia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "cyprus-northern" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "st-vincent-and-the-grenadines" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "dominica" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "swaziland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "falkland-islands-british-antarctic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "tanzania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "gambia-the" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "tonga" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "ghana" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "trinidad-and-tobago" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "grenada" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "turks-and-caicos-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "guyana" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "tuvalu" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "india" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "uganda" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "jamaica" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "vanuatu" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "kenya" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "wallis-and-futuna-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "kiribati-and-other-pacific-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "zambia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "lesotho" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "zimbabwe" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "malawi" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "malaysia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "mauritius" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "montserrat" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "mozambique" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "namibia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "new-commonwealth" and child.code = "nauru" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "austria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "belgium" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "denmark" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "finland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "aland-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "france" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "germany" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "gibraltar" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "greece" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "republic-of-ireland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "italy" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "luxembourg" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "netherlands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "portugal" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "azores-and-madeira" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "spain-and-balearic-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "canary-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "spain" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "sweden" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "czech-republic" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "estonia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "hungary" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "latvia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "lithuania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "poland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "slovakia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "slovenia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "bulgaria" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "romania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "albania" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "andorra" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "armenia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "azerbaijan" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "belarus" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "bosnia-herzegovina" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "cyprus-northern" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "czechoslovakia-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "faeroe-islands" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "georgia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "greenland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "iceland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "kosova" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "liechtenstein" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "macedonia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "moldova" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "monaco" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "montenegro" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "norway" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "bouvet-island" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "svalbard-and-jan-mayen" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "russia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "san-marino" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "serbia" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "switzerland" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "turkey" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "ukraine" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "ussr-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "vatican-city" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "yugoslavia-ex" CREATE (child)-[:hasParent]->(parent);
MATCH (parent:`_generic_hierarchy_node_migration-country`), (child:`_generic_hierarchy_node_migration-country`) where parent.code = "europe-inc-european-union" and child.code = "yugoslavia-not-otherwise-specified" CREATE (child)-[:hasParent]->(parent);
